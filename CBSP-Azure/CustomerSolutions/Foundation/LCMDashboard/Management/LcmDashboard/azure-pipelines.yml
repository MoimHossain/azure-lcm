trigger:
- main

pool:
  vmImage: ubuntu-latest
variables:
  resourceGroupName: "azure-lcm"
  location: "westeurope"
  workloadName: "azlcm"
  workloadEnv: "ut"
  appServiceName: "$(workloadName)appservice$(workloadEnv)"
  keyvaultUri: "https://$(workloadName)keyvault$(workloadEnv).vault.azure.net/"
  storageAccountName: "$(workloadName)storageacc$(workloadEnv)"
  serviceConnectionName: "MCAPS-Hybrid-REQ-38041-2022-MoimHossain"
  azureDevOpsOrgName: "moim"

stages:
  # - stage: CreateInfrastructure
  #   displayName: 'Create Infrastructure'    
  #   jobs:
  #   - job: CreateInfra
  #     displayName: 'Create infrastructure'
  #     steps:
  #     - checkout: self
  #     - task: AzureCLI@2
  #       displayName: 'Deploy infrastructure'
  #       inputs:
  #         azureSubscription: $(serviceConnectionName)
  #         scriptType: bash
  #         scriptPath: 'CBSP-Azure/CustomerSolutions/Foundation/LCMDashboard/Management/LcmDashboard/infra/build-infra.sh'
  #         workingDirectory: CBSP-Azure/CustomerSolutions/Foundation/LCMDashboard/Management/LcmDashboard/infra
  #       env:
  #         resourceGroupName: $(resourceGroupName)
  #         location: $(location)
  #         workloadName: $(workloadName)
  #         workloadEnv: $(workloadEnv)
      


  - stage: PublishApplication
    displayName: 'Build and Publish Application'
    # dependsOn: CreateInfrastructure
    # condition: succeeded()
    jobs:
    - job: BuildAndPublish
      displayName: 'Build and Publish Application'
      steps:
      - checkout: self
      - task: UseDotNet@2
        displayName: 'Install .NET SDK'
        inputs:
          packageType: 'sdk'
          version: '8.0.x'

      - script: |
          cd  /home/vsts/work/1/s/CBSP-Azure/CustomerSolutions/Foundation/LCMDashboard/Management/LcmDashboard/Azure.Lcm.Web/
          dotnet publish "Azure.Lcm.Web.csproj" -c "Release" -o "$(Build.ArtifactStagingDirectory)/published-content-$(Build.BuildId)"
        displayName: 'Build application'

      - task: ArchiveFiles@2
        displayName: 'Zip application'
        inputs:
          rootFolderOrFile: "$(Build.ArtifactStagingDirectory)/published-content-$(Build.BuildId)"
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
          replaceExistingArchive: true 
 
      - task: PublishPipelineArtifact@1
        displayName: 'Publish Artifact' 
        inputs:
          targetPath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
          artifact: 'drop'
          publishLocation: 'pipeline'

      - task: AzureWebApp@1
        displayName: 'Deploy web app'
        inputs:
          azureSubscription: $(serviceConnectionName)
          appType: 'webApp'
          appName: $(appServiceName)
          package: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
          # appSettings: '-GITHUB_PAT "XXX" -AZURE_DEVOPS_ORGNAME "$(azureDevOpsOrgName)"'
          deploymentMethod: 'zipDeploy'