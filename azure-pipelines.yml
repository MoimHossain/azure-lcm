trigger:
- main

pool:
  vmImage: ubuntu-latest
variables:
  resourceGroupName: "azlcm-solution"
  location: "westeurope"
  workloadName: "azlcm"
  workloadEnv: "uat" 
  containerName: "az-lcm-configs"
  registryURI: $(workloadName)azcontreg$(workloadEnv).azurecr.io 
  imageName: "azure-lcm-poc"
  serviceConnectionName: "MCAPS-Hybrid-REQ-38041-2022-MoimHossain"
  azureDevOpsOrgName: "moim"
  keyvaultUri: "https://$(workloadName)keyvault$(workloadEnv).vault.azure.net/"

stages:
  - stage: CreateInfrastructure
    displayName: 'Create Infrastructure'    
    jobs:
    - job: CreateInfra
      displayName: 'Create infrastructure'
      steps:
      - checkout: self
      - task: AzureCLI@2
        displayName: 'Deploy infrastructure'
        inputs:
          azureSubscription: $(serviceConnectionName)
          scriptType: bash
          scriptPath: 'infra/build-infra.sh'
          workingDirectory: infra
        env:
          resourceGroupName: $(resourceGroupName)
          location: $(location)
          workloadName: $(workloadName)
          workloadEnv: $(workloadEnv)

  - stage: BuildContainerImage
    displayName: 'Build Container image'
    dependsOn: CreateInfrastructure
    condition: succeeded()
    jobs:
    - job: BuildContainer
      displayName: 'Build Container image'
      steps:
      - checkout: self
      - task: AzureCLI@2
        displayName: 'Build-Container-Image'
        inputs:
          azureSubscription: $(serviceConnectionName)
          scriptType: bash
          scriptPath: 'infra/build-container.sh'
        env:
          resourceGroupName: $(resourceGroupName)
          location: $(location)
          workloadName: $(workloadName)
          workloadEnv: $(workloadEnv)
          registryURI: $(registryURI)
          imageName: $(imageName)
          imageTag: $(Build.BuildId)

  - stage: DeleteOldContainers
    displayName: 'Delete old containers'
    dependsOn: BuildContainerImage
    condition: succeeded()
    jobs:
    - job: DeleteOldContainers
      displayName: 'Delete old containers'
      steps:
      - checkout: self
      - task: AzureCLI@2
        displayName: 'Delete-Old-Job'
        inputs:
          azureSubscription: $(serviceConnectionName)
          scriptType: bash
          scriptPath: 'infra/delete-old-containers.sh'
        env:
          resourceGroupName: $(resourceGroupName)

  - stage: ExecuteJob
    displayName: 'Execute container'
    dependsOn: DeleteOldContainers
    condition: succeeded()
    jobs:
    - job: ExecuteJob
      displayName: 'Execute container'
      steps:
      - checkout: self
      - task: AzureCLI@2
        displayName: 'Run-Job'
        inputs:
          azureSubscription: $(serviceConnectionName)
          scriptType: bash
          scriptPath: 'infra/execute-job.sh'
        env:
          resourceGroupName: $(resourceGroupName)
          location: $(location)
          workloadName: $(workloadName)
          workloadEnv: $(workloadEnv)
          keyvaultUri: $(keyvaultUri)
          registryURI: $(registryURI)
          containerName : $(containerName)
          imageName: $(imageName)
          imageTag: $(Build.BuildId)
          GTIHUB_PAT: $(GTIHUB_PAT)
          STORAGE_ACCOUNT: $(workloadName)storageacc$(workloadEnv)  
          AZURE_DEVOPS_ORGNAME: $(azureDevOpsOrgName)
          AZURE_DEVOPS_PAT: $(AZURE_DEVOPS_PAT)
