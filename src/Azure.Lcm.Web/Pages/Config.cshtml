@page
@model Azure.Lcm.Web.Pages.ConfigModel
@{
    ViewData["Title"] = "Azure DevOps Area path maps";
}

<style>
    /* Scoped styling (escaped at-rules for Razor) */
    .cm-hero { background: linear-gradient(135deg,#764ba2,#667eea,#4facfe); color:#fff; padding:2rem 2.2rem; border-radius:20px; position:relative; overflow:hidden; box-shadow:0 18px 42px -12px rgba(103,119,239,.45); }
    .cm-hero:before, .cm-hero:after { content:""; position:absolute; border-radius:50%; filter:blur(45px); opacity:.35; mix-blend-mode:screen; animation: float 14s linear infinite; }
    .cm-hero:before { width:300px; height:300px; top:-70px; right:-70px; background:radial-gradient(circle at 30% 30%, #fff, rgba(255,255,255,0)); }
    .cm-hero:after { width:220px; height:220px; bottom:-60px; left:-40px; background:radial-gradient(circle at 70% 70%, #d1efff, rgba(255,255,255,0)); animation-duration:18s; }
    @@keyframes float { 0%{ transform:translateY(0);} 50%{ transform:translateY(20px);} 100%{ transform:translateY(0);} }
    .cm-card { background:linear-gradient(145deg,rgba(255,255,255,.9),rgba(245,247,255,.8)); backdrop-filter:blur(10px); border:1px solid rgba(255,255,255,.35); border-radius:20px; padding:1.6rem 1.4rem 1.8rem; box-shadow:0 12px 34px -10px rgba(0,0,0,.12); transition:.35s; }
    .cm-card:hover { transform:translateY(-4px); box-shadow:0 18px 46px -12px rgba(0,0,0,.16); }
    .cm-section-title { font-weight:600; letter-spacing:.5px; display:flex; align-items:center; gap:.55rem; font-size:1.05rem; color:#374151; margin-bottom:1rem; }
    .cm-pill { background:linear-gradient(135deg,#667eea,#764ba2); color:#fff; padding:.4rem .75rem; border-radius:10px; font-size:.65rem; letter-spacing:.65px; font-weight:600; }
    .cm-table-wrapper { border:1px solid rgba(118,75,162,.25); border-radius:16px; overflow:hidden; background:rgba(255,255,255,.75); backdrop-filter:blur(6px); }
    table.cm-table { width:100%; margin:0; }
    table.cm-table thead { background:linear-gradient(135deg,#667eea,#764ba2); color:#fff; }
    table.cm-table th, table.cm-table td { padding:.65rem .75rem; vertical-align:middle; font-size:.85rem; }
    table.cm-table tbody tr:nth-child(even){ background:rgba(0,0,0,.025); }
    .cm-add-btn { margin-top:.75rem; font-weight:600; border-radius:14px; }
    .cm-divider { height:1px; background:linear-gradient(90deg,rgba(0,0,0,0),rgba(118,75,162,.45),rgba(0,0,0,0)); margin:1.75rem 0 1.5rem; }
    .cm-inline-grid { display:grid; gap:1rem; }
    @@media (min-width:680px){ .cm-inline-grid { grid-template-columns:repeat(auto-fit,minmax(260px,1fr)); } }
    .cm-label { font-size:.75rem; font-weight:600; text-transform:uppercase; letter-spacing:.6px; color:#4b5563; margin-bottom:.35rem; }
    .cm-field { border-radius:14px; padding:.65rem .85rem; border:1px solid rgba(118,75,162,.3); }
    .cm-field:focus { box-shadow:0 0 0 3px rgba(118,75,162,.25); border-color:#764ba2; }
    .cm-save-bar { text-align:right; }
    .cm-save-btn { font-weight:600; letter-spacing:.5px; padding:.9rem 2.1rem; border-radius:50px; box-shadow:0 10px 30px -8px rgba(102,126,234,.5); }
    .cm-save-btn:hover { box-shadow:0 12px 34px -6px rgba(102,126,234,.6); }
    .status-message { font-weight:500; margin-bottom:1rem; color:#374151; }
</style>

<div class="cm-hero mb-4">
    <h1 class="h4 mb-2 d-flex align-items-center" style="gap:.65rem;">
        <span class="cm-pill"><i class="fas fa-sitemap"></i></span>
        Azure DevOps Area Path Maps
    </h1>
    <p class="mb-0" style="opacity:.85;">Define intelligent routing rules mapping Azure artifacts & announcements to DevOps area paths.</p>
</div>

<form method="post">
    <div class="status-message">@Model.StatusMessage</div>

    <!-- Service Health Map Card -->
    <div class="cm-card mb-4">
        <div class="cm-section-title"><i class="fas fa-heartbeat"></i> Service Health Map</div>
        <div class="cm-inline-grid mb-3">
            <div>
                <label class="cm-label">Default Area Path</label>
                <input type="text" asp-for="Config.ServiceHealthMap.DefaultAreaPath" class="form-control cm-field" />
            </div>
            <div style="display:flex; align-items:center; gap:.55rem; padding-top:.35rem;">
                <input type="checkbox" asp-for="Config.ServiceHealthMap.IgnoreWhenNoMatchFound" id="Config_ServiceHealthMap_IgnoreWhenNoMatchFound" />
                <label for="Config_ServiceHealthMap_IgnoreWhenNoMatchFound" style="margin:0; font-weight:600;">Ignore When No Match Found</label>
            </div>
        </div>
        <div class="cm-table-wrapper">
            <table id="health-table" class="cm-table">
                <thead>
                    <tr>
                        <th style="width: 40%;">Services (comma sep.)</th>
                        <th style="width: 50%;">Route To Area Path</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.ServiceHealthMap != null)
                    {
                        @for (int i = 0; i < Model.ServiceHealthMap.Count; i++)
                        {
                            <tr>
                                <td><input type="text" asp-for="ServiceHealthMap[i].CommaSeparatedServices" class="form-control cm-field" /></td>
                                <td><input type="text" asp-for="ServiceHealthMap[i].RouteToAreaPath" class="form-control cm-field" /></td>
                                <td><button type="button" class="btn btn-sm btn-danger" onclick="removeRow(this)">Remove</button></td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <button type="button" class="btn btn-outline-secondary cm-add-btn" onclick="addRow('health-table')"><i class="fas fa-plus"></i> Add Row</button>
    </div>

    <!-- Azure Updates Feed Map Card -->
    <div class="cm-card mb-4">
        <div class="cm-section-title"><i class="fas fa-rss"></i> Azure Update / Feed Map</div>
        <div class="cm-inline-grid mb-3">
            <div>
                <label class="cm-label">Default Area Path</label>
                <input type="text" asp-for="Config.AzureUpdatesMap.DefaultAreaPath" class="form-control cm-field" />
            </div>
            <div style="display:flex; align-items:center; gap:.55rem; padding-top:.35rem;">
                <input type="checkbox" asp-for="Config.AzureUpdatesMap.IgnoreWhenNoMatchFound" id="Config_AzureUpdatesMap_IgnoreWhenNoMatchFound" />
                <label for="Config_AzureUpdatesMap_IgnoreWhenNoMatchFound" style="margin:0; font-weight:600;">Ignore When No Match Found</label>
            </div>
        </div>
        <div class="cm-table-wrapper">
            <table id="feed-table" class="cm-table">
                <thead>
                    <tr>
                        <th style="width: 40%;">Services (comma sep.)</th>
                        <th style="width: 50%;">Route To Area Path</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.FeedMap != null)
                    {
                        @for (int i = 0; i < Model.FeedMap.Count; i++)
                        {
                            <tr>
                                <td><input type="text" asp-for="FeedMap[i].CommaSeparatedServices" class="form-control cm-field" /></td>
                                <td><input type="text" asp-for="FeedMap[i].RouteToAreaPath" class="form-control cm-field" /></td>
                                <td><button type="button" class="btn btn-sm btn-danger" onclick="removeRow(this)">Remove</button></td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <button type="button" class="btn btn-outline-secondary cm-add-btn" onclick="addRow('feed-table')"><i class="fas fa-plus"></i> Add Row</button>
    </div>

    <!-- Azure Policy Map Card -->
    <div class="cm-card mb-4">
        <div class="cm-section-title"><i class="fas fa-shield-alt"></i> Azure Policy Map</div>
        <div class="cm-inline-grid mb-3">
            <div>
                <label class="cm-label">Default Area Path</label>
                <input type="text" asp-for="Config.PolicyMap.DefaultAreaPath" class="form-control cm-field" />
            </div>
            <div style="display:flex; align-items:center; gap:.55rem; padding-top:.35rem;">
                <input type="checkbox" asp-for="Config.PolicyMap.IgnoreWhenNoMatchFound" id="Config_PolicyMap_IgnoreWhenNoMatchFound" />
                <label for="Config_PolicyMap_IgnoreWhenNoMatchFound" style="margin:0; font-weight:600;">Ignore When No Match Found</label>
            </div>
        </div>
        <div class="cm-table-wrapper">
            <table id="policy-table" class="cm-table">
                <thead>
                    <tr>
                        <th style="width: 40%;">Services (comma sep.)</th>
                        <th style="width: 50%;">Route To Area Path</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.PolicyMap != null)
                    {
                        @for (int i = 0; i < Model.PolicyMap.Count; i++)
                        {
                            <tr>
                                <td><input type="text" asp-for="PolicyMap[i].CommaSeparatedServices" class="form-control cm-field" /></td>
                                <td><input type="text" asp-for="PolicyMap[i].RouteToAreaPath" class="form-control cm-field" /></td>
                                <td><button type="button" class="btn btn-sm btn-danger" onclick="removeRow(this)">Remove</button></td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <button type="button" class="btn btn-outline-secondary cm-add-btn" onclick="addRow('policy-table')"><i class="fas fa-plus"></i> Add Row</button>
    </div>

    <div class="cm-save-bar mb-4">
        <button type="button" class="btn btn-primary cm-save-btn" onclick="readDataFromUI()"><i class="fas fa-save"></i> Save Configuration</button>
    </div>
</form>

<script>

  
    function readDataFromUI() {        

        const payload = {
            ServiceHealthMap: {
                DefaultAreaPath: $('#Config_ServiceHealthMap_DefaultAreaPath').val(),
                IgnoreWhenNoMatchFound: $('#Config_ServiceHealthMap_IgnoreWhenNoMatchFound').val() === true,
                Map: readDataFromTable('health-table')
            },
            PolicyMap: {
                DefaultAreaPath: $('#Config_PolicyMap_DefaultAreaPath').val(),
                IgnoreWhenNoMatchFound: $('#Config_PolicyMap_IgnoreWhenNoMatchFound').val() === true,
                Map: readDataFromTable('policy-table')
            },
            AzureUpdatesMap: {
                DefaultAreaPath: $('#Config_AzureUpdatesMap_DefaultAreaPath').val(),
                IgnoreWhenNoMatchFound: $('#Config_AzureUpdatesMap_IgnoreWhenNoMatchFound').val() === true,
                Map: readDataFromTable('feed-table')
            }
        };
        fetch('/api/config-map', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(payload)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                if(window.showToast) { showToast('Area path mappings saved','success'); } else { console.log('Area path mappings saved'); }
            })
            .catch(error => {
                console.error('There was a problem with the fetch operation:', error);
            });
    }

    function readDataFromTable(tableId) {
        const maps = [];
        const tableBody = document.querySelector(`#${tableId} tbody`);
        const rows = tableBody.querySelectorAll("tr");


        rows.forEach(row => {
            const inputBoxes = row.querySelectorAll("input");

            if(inputBoxes.length > 1) {
                const map = {
                    Services: splitByComma(inputBoxes[0].value),
                    RouteToAreaPath: inputBoxes[1].value
                };
                maps  .push(map);
            }
        });
        return maps;
    }

    function splitByComma(value) {
        var items = [];
        try
        {
            const arr = value.split(",");
            arr.forEach(serviceName => {
                const sname = serviceName.trim();
                items.push(sname);
            });
        }
        catch(err)  {
            console.log(err);
        }
        return items;
    }

    function addRow(tableId) {
        const tableBody = document.querySelector(`#${tableId} tbody`);
        const newRow = document.createElement("tr");

        newRow.innerHTML = `
            <td>
                <input type="text" name="PolicyMap[].ServicesCommaSeparated" value="Comma sep. service names.." class="form-control" />
            </td>
            <td>
                <input type="text" name="PolicyMap[].RouteToAreaPath" value="Area Path (single slash \\ works)" class="form-control" />
            </td>
            <td>
                <button type="button" class="btn btn-danger" onclick="removeRow(this)">Remove</button>
            </td>
        `;

        tableBody.appendChild(newRow);
    }

    function removeRow(button) {

        const parentRow = $(button).closest("tr");
         parentRow.remove();
    }
</script>